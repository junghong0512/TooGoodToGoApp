// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                Int         @id @default(autoincrement())
  name              String
  phone             String
  email             String      @unique
  password          String
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt()
  user_type         UserType
  stores            Store[]
  reviews           Review[]
  seller_messages   Message[] @relation("seller_messages")
  buyer_messages    Message[] @relation("buyer_messages")
}


model Store {
  id                Int         @id @default(autoincrement())
  name              String
  address           String
  description       String
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt()
  store_images      StoreImage[]
  owner_id          Int
  owner             User        @relation(fields: [owner_id], references: [id])
  menus             Menu[]
}


model StoreImage {
  id                Int         @id @default(autoincrement())
  url               String  
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt()
  store_id          Int 
  store             Store       @relation(fields: [store_id], references: [id])
}


model Menu {
  id                Int         @id @default(autoincrement())
  name              String
  description       String
  remains           Int
  type              MenuType
  created_at        DateTime    @default(now())
  updated_at        DateTime    @updatedAt()
  store_id          Int
  store             Store       @relation(fields: [store_id], references: [id])
  reviews           Review[]
  messages          Message[]
}


model Review {
  id                Int @id @default(autoincrement())
  message           String
  score             Int
  created_at        DateTime    @default(now())
  menu_id           Int
  menu              Menu        @relation(fields: [menu_id], references: [id])
  user_id           Int
  user              User        @relation(fields: [user_id], references: [id])
}


model Message {
  id                Int @id @default(autoincrement())
  message           String
  menu_id           Int
  menu              Menu  @relation(fields: [menu_id], references: [id])
  seller_id         Int
  seller            User  @relation("seller_messages", fields: [seller_id], references: [id])
  buyer_id          Int
  buyer             User  @relation("buyer_messages", fields: [buyer_id], references: [id])
}


enum UserType {
  SELLER
  BUYER
  ADMIN
}


enum MenuType {
  GROCERY
  BAKERY
  KOREAN
  CAFE
}